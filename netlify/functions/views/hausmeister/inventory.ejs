<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Burg Hochosterwitz - Materiallager</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        :root {
            --burg-red: #9B0600;
            --burg-gold: #C4A777;
            --burg-brown: #4A3C31;
            --burg-beige: #F5E6D3;
        }
        
        body {
            font-family: 'Times New Roman', serif;
            margin: 0;
            padding: 0;
            background-color: var(--burg-beige);
            color: var(--burg-brown);
        }
        
        .header {
            background-color: var(--burg-red);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .container {
            max-width: 1200px;
            margin: 40px auto;
            padding: 0 20px;
        }
        
        .inventory-filters {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }
        
        .search-box {
            flex-grow: 1;
            position: relative;
        }
        
        .search-box input {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--burg-gold);
            border-radius: 4px;
            font-size: 16px;
        }
        
        .filter-group {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .filter-group select {
            padding: 8px;
            border: 1px solid var(--burg-gold);
            border-radius: 4px;
            background-color: white;
        }
        
        .inventory-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .inventory-card {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            display: flex;
            flex-direction: column;
        }
        
        .inventory-header {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .inventory-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 4px;
        }
        
        .inventory-info {
            flex-grow: 1;
        }
        
        .inventory-name {
            font-size: 18px;
            font-weight: bold;
            margin: 0 0 5px 0;
        }
        
        .inventory-quantity {
            font-size: 16px;
            margin: 5px 0;
        }
        
        .inventory-quantity.low {
            color: var(--burg-red);
        }
        
        .inventory-location {
            font-size: 14px;
            color: #666;
            margin: 5px 0;
        }
        
        .inventory-actions {
            display: flex;
            gap: 10px;
            margin-top: auto;
        }
        
        .btn {
            display: inline-block;
            padding: 10px 20px;
            background-color: var(--burg-gold);
            color: white;
            text-decoration: none;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            font-family: inherit;
            font-size: 16px;
            text-align: center;
            flex: 1;
        }
        
        .btn:hover {
            background-color: #B39666;
        }
        
        .btn-outline {
            background-color: transparent;
            border: 1px solid var(--burg-gold);
            color: var(--burg-gold);
        }
        
        .btn-outline:hover {
            background-color: var(--burg-gold);
            color: white;
        }
        
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.7);
            z-index: 1000;
        }
        
        .modal-content {
            position: relative;
            background-color: white;
            margin: 50px auto;
            padding: 20px;
            width: 90%;
            max-width: 500px;
            border-radius: 8px;
        }
        
        .close-modal {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 24px;
            cursor: pointer;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid var(--burg-gold);
            border-radius: 4px;
            font-family: inherit;
            font-size: 16px;
        }
        
        .form-group textarea {
            resize: vertical;
            min-height: 100px;
        }
        
        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                text-align: center;
            }
            
            .inventory-filters {
                flex-direction: column;
            }
            
            .search-box {
                width: 100%;
            }
            
            .filter-group {
                width: 100%;
            }
            
            .inventory-header {
                flex-direction: column;
                align-items: center;
                text-align: center;
            }
            
            .inventory-image {
                width: 150px;
                height: 150px;
            }
            
            .inventory-actions {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>Materiallager</h1>
        <a href="/dashboard" class="btn">Zurück zum Dashboard</a>
    </div>
    
    <div class="container">
        <div class="inventory-filters">
            <div class="search-box">
                <input type="text" id="searchInput" placeholder="Material suchen...">
            </div>
            
            <div class="filter-group">
                <label for="sortBy">Sortieren nach:</label>
                <select id="sortBy">
                    <option value="name">Name</option>
                    <option value="quantity">Bestand</option>
                    <option value="lastUpdated">Letzte Aktualisierung</option>
                </select>
            </div>
            
            <div class="filter-group">
                <label for="filterBy">Filter:</label>
                <select id="filterBy">
                    <option value="all">Alle</option>
                    <option value="low">Niedriger Bestand</option>
                </select>
            </div>
        </div>
        
        <div class="inventory-grid" id="inventoryGrid">
            <!-- Wird durch JavaScript gefüllt -->
        </div>
    </div>
    
    <!-- Modal für Bestandsänderung -->
    <div id="updateModal" class="modal">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2>Bestand aktualisieren</h2>
            <form id="updateForm">
                <input type="hidden" id="materialId">
                <div class="form-group">
                    <label for="updateType">Art der Änderung:</label>
                    <select id="updateType" required>
                        <option value="in">Eingang</option>
                        <option value="out">Ausgang</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="quantity">Menge:</label>
                    <input type="number" id="quantity" min="1" required>
                </div>
                <div class="form-group">
                    <label for="notes">Notizen:</label>
                    <textarea id="notes" placeholder="Grund für die Bestandsänderung"></textarea>
                </div>
                <button type="submit" class="btn">Speichern</button>
            </form>
        </div>
    </div>
    
    <script>
        // Globale Variablen
        let materials = [];
        let currentMaterial = null;
        
        // Materialliste laden
        async function loadInventory() {
            try {
                const response = await fetch('/api/inventory');
                materials = await response.json();
                filterAndDisplayMaterials();
            } catch (error) {
                console.error('Fehler beim Laden des Inventars:', error);
            }
        }
        
        // Materialien filtern und anzeigen
        function filterAndDisplayMaterials() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const sortBy = document.getElementById('sortBy').value;
            const filterBy = document.getElementById('filterBy').value;
            
            let filteredMaterials = materials.filter(material => {
                if (filterBy === 'low' && material.quantity > material.minQuantity) {
                    return false;
                }
                return material.name.toLowerCase().includes(searchTerm);
            });
            
            // Sortierung
            filteredMaterials.sort((a, b) => {
                switch (sortBy) {
                    case 'name':
                        return a.name.localeCompare(b.name);
                    case 'quantity':
                        return a.quantity - b.quantity;
                    case 'lastUpdated':
                        return new Date(b.lastUpdated) - new Date(a.lastUpdated);
                    default:
                        return 0;
                }
            });
            
            const grid = document.getElementById('inventoryGrid');
            grid.innerHTML = '';
            
            filteredMaterials.forEach(material => {
                const card = document.createElement('div');
                card.className = 'inventory-card';
                card.innerHTML = `
                    <div class="inventory-header">
                        ${material.image ? `
                            <img src="${material.image}" alt="${material.name}" class="inventory-image">
                        ` : ''}
                        <div class="inventory-info">
                            <h3 class="inventory-name">${material.name}</h3>
                            <div class="inventory-quantity ${material.quantity <= material.minQuantity ? 'low' : ''}">
                                ${material.quantity} ${material.unit}
                            </div>
                            ${material.location ? `
                                <div class="inventory-location">
                                    <i class="fas fa-map-marker-alt"></i> ${material.location}
                                </div>
                            ` : ''}
                            <div class="inventory-location">
                                Letzte Aktualisierung: ${formatDate(material.lastUpdated)}
                            </div>
                        </div>
                    </div>
                    <div class="inventory-actions">
                        <button class="btn" onclick="showUpdateModal('${material._id}', 'in')">Eingang</button>
                        <button class="btn btn-outline" onclick="showUpdateModal('${material._id}', 'out')">Ausgang</button>
                    </div>
                `;
                grid.appendChild(card);
            });
        }
        
        // Update Modal anzeigen
        function showUpdateModal(materialId, type) {
            currentMaterial = materials.find(m => m._id === materialId);
            document.getElementById('materialId').value = materialId;
            document.getElementById('updateType').value = type;
            document.getElementById('quantity').value = '';
            document.getElementById('notes').value = '';
            document.getElementById('updateModal').style.display = 'block';
        }
        
        // Bestand aktualisieren
        async function updateInventory(event) {
            event.preventDefault();
            
            const materialId = document.getElementById('materialId').value;
            const type = document.getElementById('updateType').value;
            const quantity = parseInt(document.getElementById('quantity').value);
            const notes = document.getElementById('notes').value;
            
            try {
                const response = await fetch(`/api/inventory/${materialId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ quantity, type, notes })
                });
                
                if (response.ok) {
                    document.getElementById('updateModal').style.display = 'none';
                    loadInventory();
                } else {
                    const error = await response.json();
                    alert(error.error || 'Ein Fehler ist aufgetreten');
                }
            } catch (error) {
                console.error('Fehler beim Aktualisieren des Bestands:', error);
                alert('Ein Fehler ist aufgetreten');
            }
        }
        
        // Hilfsfunktionen
        function formatDate(dateString) {
            return new Date(dateString).toLocaleDateString('de-DE', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }
        
        // Event Listener
        document.getElementById('searchInput').addEventListener('input', filterAndDisplayMaterials);
        document.getElementById('sortBy').addEventListener('change', filterAndDisplayMaterials);
        document.getElementById('filterBy').addEventListener('change', filterAndDisplayMaterials);
        document.getElementById('updateForm').addEventListener('submit', updateInventory);
        
        document.querySelector('.close-modal').onclick = () => {
            document.getElementById('updateModal').style.display = 'none';
        };
        
        window.onclick = (event) => {
            const modal = document.getElementById('updateModal');
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        };
        
        // Initial laden
        loadInventory();
    </script>
</body>
</html>
