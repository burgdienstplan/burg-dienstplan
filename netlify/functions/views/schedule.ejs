<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Burg Hochosterwitz - Dienstplan</title>
    <style>
        :root {
            --burg-red: #9B0600;
            --burg-gold: #C4A777;
            --burg-brown: #4A3C31;
            --burg-beige: #F5E6D3;
        }
        
        body {
            font-family: 'Times New Roman', serif;
            margin: 0;
            padding: 0;
            min-height: 100vh;
            background-color: var(--burg-beige);
        }
        
        .header {
            background-color: var(--burg-red);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        
        .logo {
            height: 50px;
        }
        
        .btn {
            padding: 8px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            text-decoration: none;
            transition: all 0.3s;
        }
        
        .btn-white {
            background-color: white;
            color: var(--burg-red);
        }
        
        .btn-white:hover {
            background-color: var(--burg-gold);
            color: white;
        }
        
        .btn-gold {
            background-color: var(--burg-gold);
            color: white;
        }
        
        .btn-gold:hover {
            background-color: #B39666;
        }
        
        .content {
            max-width: 1200px;
            margin: 40px auto;
            padding: 0 20px;
        }
        
        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .month-navigation {
            display: flex;
            align-items: center;
            gap: 20px;
        }
        
        .month-title {
            font-size: 24px;
            color: var(--burg-brown);
            min-width: 200px;
            text-align: center;
        }
        
        .calendar {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 10px;
        }
        
        .weekday-header {
            text-align: center;
            font-weight: bold;
            color: var(--burg-brown);
            padding: 10px;
            border-bottom: 2px solid var(--burg-beige);
        }
        
        .calendar-day {
            border: 1px solid var(--burg-beige);
            border-radius: 4px;
            min-height: 120px;
            padding: 10px;
            position: relative;
        }
        
        .day-number {
            position: absolute;
            top: 5px;
            right: 5px;
            color: var(--burg-brown);
            font-size: 14px;
        }
        
        .holiday {
            background-color: #FFF3E0;
        }
        
        .holiday-name {
            color: var(--burg-red);
            font-size: 12px;
            font-style: italic;
            margin-top: 20px;
        }
        
        .shift-entry {
            margin-top: 5px;
            padding: 4px;
            border-radius: 4px;
            font-size: 12px;
            cursor: pointer;
        }
        
        .shift-shop-eintritt {
            background-color: #E8F5E9;
            border-left: 3px solid #4CAF50;
        }
        
        .shift-eintritt {
            background-color: #E3F2FD;
            border-left: 3px solid #2196F3;
        }
        
        .shift-shop-museum {
            background-color: #FFF3E0;
            border-left: 3px solid #FF9800;
        }
        
        .shift-fuehrung {
            background-color: #F3E5F5;
            border-left: 3px solid #9C27B0;
        }
        
        .shift-requested {
            opacity: 0.7;
        }
        
        .shift-approved {
            opacity: 1;
        }
        
        .shift-rejected {
            opacity: 0.5;
            text-decoration: line-through;
        }
        
        .legend {
            margin-top: 20px;
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }
        
        .legend-item {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 14px;
        }
        
        .legend-color {
            width: 20px;
            height: 20px;
            border-radius: 4px;
        }
        
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        
        .modal-content {
            background-color: white;
            margin: 10% auto;
            padding: 20px;
            width: 90%;
            max-width: 500px;
            border-radius: 8px;
            position: relative;
        }
        
        .close {
            position: absolute;
            right: 20px;
            top: 10px;
            font-size: 28px;
            cursor: pointer;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: var(--burg-brown);
        }
        
        .form-group select,
        .form-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid var(--burg-gold);
            border-radius: 4px;
        }
        
        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                text-align: center;
                gap: 10px;
            }
            
            .calendar-header {
                flex-direction: column;
                gap: 10px;
            }
            
            .weekday-header {
                font-size: 12px;
                padding: 5px;
            }
            
            .calendar-day {
                min-height: 80px;
                font-size: 12px;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <img src="/images/logo.jpg" alt="Burg Hochosterwitz Logo" class="logo">
        <div>
            <% if (user.role === 'kastellan') { %>
                <button onclick="showHolidayModal()" class="btn btn-gold">Feiertag hinzufügen</button>
            <% } %>
            <a href="/dashboard" class="btn btn-white">Zurück zum Dashboard</a>
        </div>
    </div>
    
    <div class="content">
        <div class="calendar-header">
            <div class="month-navigation">
                <button onclick="changeMonth(-1)" class="btn btn-gold">&lt;</button>
                <h2 class="month-title" id="monthTitle"></h2>
                <button onclick="changeMonth(1)" class="btn btn-gold">&gt;</button>
            </div>
            <% if (user.role === 'kastellan') { %>
                <button onclick="showShiftModal()" class="btn btn-gold">Dienst eintragen</button>
            <% } else { %>
                <button onclick="showRequestModal()" class="btn btn-gold">Dienst/Urlaub beantragen</button>
            <% } %>
        </div>
        
        <div class="calendar">
            <div class="calendar-grid" id="calendarGrid">
                <div class="weekday-header">Montag</div>
                <div class="weekday-header">Dienstag</div>
                <div class="weekday-header">Mittwoch</div>
                <div class="weekday-header">Donnerstag</div>
                <div class="weekday-header">Freitag</div>
                <div class="weekday-header">Samstag</div>
                <div class="weekday-header">Sonntag</div>
                <!-- Kalendertage werden durch JavaScript eingefügt -->
            </div>
        </div>
        
        <div class="legend">
            <div class="legend-item">
                <div class="legend-color" style="background-color: #E8F5E9; border-left: 3px solid #4CAF50;"></div>
                <span>Shop Eintritt</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #E3F2FD; border-left: 3px solid #2196F3;"></div>
                <span>Eintritt</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #FFF3E0; border-left: 3px solid #FF9800;"></div>
                <span>Shop Museum</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #F3E5F5; border-left: 3px solid #9C27B0;"></div>
                <span>Führung</span>
            </div>
        </div>
    </div>
    
    <!-- Modal für Dienst/Urlaub -->
    <div id="shiftModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('shiftModal')">&times;</span>
            <h3 id="modalTitle">Dienst eintragen</h3>
            <form id="shiftForm" onsubmit="handleShiftSubmit(event)">
                <input type="hidden" id="selectedDate">
                <div class="form-group">
                    <label for="employee">Mitarbeiter</label>
                    <select id="employee" required>
                        <!-- Wird durch JavaScript gefüllt -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="position">Position</label>
                    <select id="position" required>
                        <option value="shop_eintritt">Shop Eintritt</option>
                        <option value="eintritt">Eintritt</option>
                        <option value="shop_museum">Shop Museum</option>
                        <option value="fuehrung">Führung</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="type">Typ</label>
                    <select id="type" required>
                        <option value="work">Arbeit</option>
                        <option value="vacation">Urlaub</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-gold">Speichern</button>
            </form>
        </div>
    </div>
    
    <!-- Modal für Feiertage -->
    <div id="holidayModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('holidayModal')">&times;</span>
            <h3>Feiertag hinzufügen</h3>
            <form id="holidayForm" onsubmit="handleHolidaySubmit(event)">
                <input type="hidden" id="holidayDate">
                <div class="form-group">
                    <label for="holidayName">Name</label>
                    <input type="text" id="holidayName" required>
                </div>
                <div class="form-group">
                    <label for="holidayType">Typ</label>
                    <select id="holidayType" required>
                        <option value="holiday">Feiertag</option>
                        <option value="closed">Geschlossen</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-gold">Speichern</button>
            </form>
        </div>
    </div>

    <script>
        let currentDate = new Date();
        const isKastellan = <%- user.role === 'kastellan' ? 'true' : 'false' %>;
        const userId = '<%- user._id %>';
        
        // Kalender initialisieren
        function initCalendar() {
            updateMonthTitle();
            loadSchedule();
        }
        
        // Monatstitel aktualisieren
        function updateMonthTitle() {
            const months = ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 
                          'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'];
            document.getElementById('monthTitle').textContent = 
                `${months[currentDate.getMonth()]} ${currentDate.getFullYear()}`;
        }
        
        // Monat wechseln
        function changeMonth(delta) {
            currentDate.setMonth(currentDate.getMonth() + delta);
            updateMonthTitle();
            loadSchedule();
        }
        
        // Dienstplan laden
        async function loadSchedule() {
            try {
                const year = currentDate.getFullYear();
                const month = currentDate.getMonth() + 1;
                
                const response = await fetch(`/api/schedule?year=${year}&month=${month}`);
                const data = await response.json();
                
                renderCalendar(data.entries, data.holidays);
            } catch (error) {
                console.error('Fehler beim Laden des Dienstplans:', error);
            }
        }
        
        // Kalender rendern
        function renderCalendar(entries, holidays) {
            const grid = document.getElementById('calendarGrid');
            const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
            const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
            
            // Bestehende Tage entfernen
            while (grid.children.length > 7) {
                grid.removeChild(grid.lastChild);
            }
            
            // Leere Tage am Anfang
            let firstWeekday = firstDay.getDay() || 7; // Sonntag = 0 -> 7
            for (let i = 1; i < firstWeekday; i++) {
                grid.appendChild(createEmptyDay());
            }
            
            // Tage des Monats
            for (let day = 1; day <= lastDay.getDate(); day++) {
                const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);
                const dayEntries = entries.filter(entry => 
                    new Date(entry.date).toDateString() === date.toDateString()
                );
                const holiday = holidays.find(h => 
                    new Date(h.date).toDateString() === date.toDateString()
                );
                
                grid.appendChild(createDay(day, dayEntries, holiday));
            }
        }
        
        // Leeren Tag erstellen
        function createEmptyDay() {
            const div = document.createElement('div');
            div.className = 'calendar-day';
            return div;
        }
        
        // Tag erstellen
        function createDay(day, entries, holiday) {
            const div = document.createElement('div');
            div.className = 'calendar-day' + (holiday ? ' holiday' : '');
            
            const dayNumber = document.createElement('div');
            dayNumber.className = 'day-number';
            dayNumber.textContent = day;
            div.appendChild(dayNumber);
            
            if (holiday) {
                const holidayDiv = document.createElement('div');
                holidayDiv.className = 'holiday-name';
                holidayDiv.textContent = holiday.name;
                div.appendChild(holidayDiv);
            }
            
            entries.forEach(entry => {
                const entryDiv = document.createElement('div');
                entryDiv.className = `shift-entry shift-${entry.position} shift-${entry.status}`;
                entryDiv.textContent = `${entry.employee.firstName} - ${formatPosition(entry.position)}`;
                if (isKastellan || entry.employee._id === userId) {
                    entryDiv.onclick = () => showShiftModal(entry);
                }
                div.appendChild(entryDiv);
            });
            
            return div;
        }
        
        // Position formatieren
        function formatPosition(position) {
            const positions = {
                'shop_eintritt': 'Shop Eintritt',
                'eintritt': 'Eintritt',
                'shop_museum': 'Shop Museum',
                'fuehrung': 'Führung'
            };
            return positions[position] || position;
        }
        
        // Modal öffnen
        function showShiftModal(entry = null) {
            const modal = document.getElementById('shiftModal');
            const form = document.getElementById('shiftForm');
            
            if (entry) {
                document.getElementById('modalTitle').textContent = 'Dienst bearbeiten';
                // Formular mit Daten füllen
            } else {
                document.getElementById('modalTitle').textContent = 'Dienst eintragen';
                form.reset();
            }
            
            modal.style.display = 'block';
        }
        
        // Feiertag Modal öffnen
        function showHolidayModal() {
            document.getElementById('holidayModal').style.display = 'block';
        }
        
        // Modal schließen
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }
        
        // Dienst speichern
        async function handleShiftSubmit(event) {
            event.preventDefault();
            const form = event.target;
            
            try {
                const response = await fetch('/api/schedule/' + form.employee.value, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        date: form.selectedDate.value,
                        position: form.position.value,
                        type: form.type.value
                    })
                });
                
                if (response.ok) {
                    closeModal('shiftModal');
                    loadSchedule();
                } else {
                    const error = await response.json();
                    alert(error.error || 'Ein Fehler ist aufgetreten');
                }
            } catch (error) {
                console.error('Fehler beim Speichern:', error);
                alert('Ein Fehler ist aufgetreten');
            }
        }
        
        // Feiertag speichern
        async function handleHolidaySubmit(event) {
            event.preventDefault();
            const form = event.target;
            
            try {
                const response = await fetch('/api/holidays', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        date: form.holidayDate.value,
                        name: form.holidayName.value,
                        type: form.holidayType.value
                    })
                });
                
                if (response.ok) {
                    closeModal('holidayModal');
                    loadSchedule();
                } else {
                    const error = await response.json();
                    alert(error.error || 'Ein Fehler ist aufgetreten');
                }
            } catch (error) {
                console.error('Fehler beim Speichern:', error);
                alert('Ein Fehler ist aufgetreten');
            }
        }
        
        // Beim Laden initialisieren
        initCalendar();
        
        // Fenster schließen wenn außerhalb geklickt wird
        window.onclick = function(event) {
            if (event.target.className === 'modal') {
                event.target.style.display = 'none';
            }
        }
    </script>
</body>
</html>
